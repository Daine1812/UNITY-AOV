import osimport u3aov as libUnityfrom PIL import Imagedef Extra_eport(obj):	if obj.type.name in [ "Mesh" ]:		mesh = obj.read()		with open(f"{mesh.m_Name}.obj", "wt", newline = "") as f: f.write(mesh.export())input_folder = "input"output_folder = "output"os.makedirs(output_folder, exist_ok=True)while True:	mode = input("Chọn chế độ (export/import): ").strip().lower()	m_export = ["e",1]	m_import = ["i",2]	if mode in m_export:		print("Đang giải nén tất cả AssetBundle...")		for file_name in os.listdir(input_folder):			if file_name.endswith(".assetbundle"):				input_path = os.path.join(input_folder, file_name)				output_path = os.path.join(output_folder, file_name.replace(".assetbundle", ""))				os.makedirs(output_path, exist_ok=True)					env = libUnity.load(input_path)				print(f"Đang giải nén: {file_name}")					for obj in env.objects:					print(obj)					if obj.type.name in [ "Texture2D" ]:						data = obj.read()						try:							data.m_textureformat = libUnity.enums.TextureFormat.RGBA32						except: pass						img_path = os.path.join(output_path, f"{data.m_Name}.png")							img = data.image						img.save(img_path)						print(f"Đã giải nén: {img_path}")					else:						pass			print(f"Tất cả file AssetBundle đã được giải nén vào thư mục: {output_folder}")		elif mode in m_import:		print("Đang nén tất cả AssetBundle...")		for folder_name in os.listdir(input_folder):			folder_name = folder_name.replace(".assetbundle", "")			folder_path = os.path.join(output_folder, folder_name)			if os.path.isdir(folder_path):				input_assetbundle = os.path.join(input_folder, f"{folder_name}.assetbundle")				output_assetbundle = os.path.join(output_folder, f"{folder_name}.assetbundle")					env = libUnity.load(input_assetbundle)				print(f"Đang nén: {folder_name}")					for obj in env.objects:					if obj.type.name in [ "Texture2D" ]:						data = obj.read()						img_path = os.path.join(folder_path, f"{data.m_Name}.png")						if os.path.exists(img_path):							data.m_textureformat = libUnity.enums.TextureFormat.RGBA32							pil_img = Image.open(img_path)							data.set_image(pil_img, libUnity.enums.TextureFormat.RGBA32)							data.save()							print(f"Đã thêm: {img_path}")					with open(output_assetbundle, "wb") as f:					f.write(env.file.save("lz4"))				print(f"Đã lưu AssetBundle mới tại: {output_assetbundle}")			print(f"Tất cả AssetBundle đã được nén lại vào thư mục: {output_folder}")		else:		print("Chế độ không hợp lệ. Vui lòng chọn 'export' hoặc 'import'.")	